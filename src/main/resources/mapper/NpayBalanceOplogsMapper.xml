<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myd.dao.NpayBalanceOplogsMapper" >
  <resultMap id="BaseResultMap" type="com.myd.entity.NpayBalanceOplogs" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mer_id" property="merId" jdbcType="VARCHAR" />
    <result column="channel_mer_id" property="channelMerId" jdbcType="VARCHAR" />
    <result column="txnAmt" property="txnamt" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="orderId" property="orderid" jdbcType="VARCHAR" />
    <result column="in_fee" property="inFee" jdbcType="INTEGER" />
    <result column="out_fee" property="outFee" jdbcType="INTEGER" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="settle_amount" property="settleAmount" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="op_type" property="opType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mer_id, channel_mer_id, txnAmt, create_at, orderId, in_fee, out_fee, update_at, 
    settle_amount, comment, op_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from npay_balance_oplogs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from npay_balance_oplogs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myd.entity.NpayBalanceOplogs" >
    insert into npay_balance_oplogs (id, mer_id, channel_mer_id, 
      txnAmt, create_at, orderId, 
      in_fee, out_fee, update_at, 
      settle_amount, comment, op_type
      )
    values (#{id,jdbcType=INTEGER}, #{merId,jdbcType=VARCHAR}, #{channelMerId,jdbcType=VARCHAR}, 
      #{txnamt,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{orderid,jdbcType=VARCHAR}, 
      #{inFee,jdbcType=INTEGER}, #{outFee,jdbcType=INTEGER}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{settleAmount,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{opType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myd.entity.NpayBalanceOplogs" >
    insert into npay_balance_oplogs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="merId != null" >
        mer_id,
      </if>
      <if test="channelMerId != null" >
        channel_mer_id,
      </if>
      <if test="txnamt != null" >
        txnAmt,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="inFee != null" >
        in_fee,
      </if>
      <if test="outFee != null" >
        out_fee,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="settleAmount != null" >
        settle_amount,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="opType != null" >
        op_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="merId != null" >
        #{merId,jdbcType=VARCHAR},
      </if>
      <if test="channelMerId != null" >
        #{channelMerId,jdbcType=VARCHAR},
      </if>
      <if test="txnamt != null" >
        #{txnamt,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="inFee != null" >
        #{inFee,jdbcType=INTEGER},
      </if>
      <if test="outFee != null" >
        #{outFee,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="settleAmount != null" >
        #{settleAmount,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="opType != null" >
        #{opType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myd.entity.NpayBalanceOplogs" >
    update npay_balance_oplogs
    <set >
      <if test="merId != null" >
        mer_id = #{merId,jdbcType=VARCHAR},
      </if>
      <if test="channelMerId != null" >
        channel_mer_id = #{channelMerId,jdbcType=VARCHAR},
      </if>
      <if test="txnamt != null" >
        txnAmt = #{txnamt,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="inFee != null" >
        in_fee = #{inFee,jdbcType=INTEGER},
      </if>
      <if test="outFee != null" >
        out_fee = #{outFee,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="settleAmount != null" >
        settle_amount = #{settleAmount,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="opType != null" >
        op_type = #{opType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myd.entity.NpayBalanceOplogs" >
    update npay_balance_oplogs
    set mer_id = #{merId,jdbcType=VARCHAR},
      channel_mer_id = #{channelMerId,jdbcType=VARCHAR},
      txnAmt = #{txnamt,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      orderId = #{orderid,jdbcType=VARCHAR},
      in_fee = #{inFee,jdbcType=INTEGER},
      out_fee = #{outFee,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      settle_amount = #{settleAmount,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      op_type = #{opType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByExampleoplogs" parameterType="map" resultType="map">
  		   SELECT
				b.mer_id,
				n.mer_short_name,
				cast(
					b.txnAmt / 100 AS DECIMAL (18, 2)
				) txnAmt,
				b.create_at,
				b.`comment`
			FROM
				npay_balance_oplogs b
			LEFT JOIN npay_mer_info n ON b.mer_id = n.mer_id
  </select>
  
  <select id="findByAbnormal" parameterType="map" resultType="map">
  			SELECT 
				n.create_at,
				n.merchantId,
				n.txnAmt,
				n.update_at,
				n.statusDesc,
				n.status,
				m.mer_name,
				c.channel_mer_abbr,
				n.orderId
				FROM npay_order n 
				LEFT JOIN npay_mer_info m
				ON n.merchantId = m.mer_id
				LEFT JOIN npay_channels c
				ON n.channel_id = c.channel_id
				<where>
					n.`status` = '1002'
					<if test="orderId != null and orderId !=''">
			  			and n.orderId = '${orderId}'
			  		</if>
				</where>
				ORDER BY n.create_at DESC
  </select>
  
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myd.dao.NpaySettleOrdersBackupMapper" >
  <resultMap id="BaseResultMap" type="com.myd.entity.NpaySettleOrdersBackup" >
    <result column="orderId" property="orderid" jdbcType="VARCHAR" />
    <result column="txnAmt" property="txnamt" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="settle_at" property="settleAt" jdbcType="TIMESTAMP" />
    <result column="settle_amount" property="settleAmount" jdbcType="INTEGER" />
    <result column="out_fee" property="outFee" jdbcType="INTEGER" />
    <result column="channel_mer_id" property="channelMerId" jdbcType="VARCHAR" />
    <result column="mer_id" property="merId" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="in_fee" property="inFee" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <insert id="insert" parameterType="com.myd.entity.NpaySettleOrdersBackup" >
    insert into npay_settle_orders_backup (orderId, txnAmt, create_at, 
      settle_at, settle_amount, out_fee, 
      channel_mer_id, mer_id, id, 
      in_fee, status, update_at
      )
    values (#{orderid,jdbcType=VARCHAR}, #{txnamt,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, 
      #{settleAt,jdbcType=TIMESTAMP}, #{settleAmount,jdbcType=INTEGER}, #{outFee,jdbcType=INTEGER}, 
      #{channelMerId,jdbcType=VARCHAR}, #{merId,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, 
      #{inFee,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{updateAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myd.entity.NpaySettleOrdersBackup" >
    insert into npay_settle_orders_backup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="txnamt != null" >
        txnAmt,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="settleAt != null" >
        settle_at,
      </if>
      <if test="settleAmount != null" >
        settle_amount,
      </if>
      <if test="outFee != null" >
        out_fee,
      </if>
      <if test="channelMerId != null" >
        channel_mer_id,
      </if>
      <if test="merId != null" >
        mer_id,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="inFee != null" >
        in_fee,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="txnamt != null" >
        #{txnamt,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="settleAt != null" >
        #{settleAt,jdbcType=TIMESTAMP},
      </if>
      <if test="settleAmount != null" >
        #{settleAmount,jdbcType=INTEGER},
      </if>
      <if test="outFee != null" >
        #{outFee,jdbcType=INTEGER},
      </if>
      <if test="channelMerId != null" >
        #{channelMerId,jdbcType=VARCHAR},
      </if>
      <if test="merId != null" >
        #{merId,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="inFee != null" >
        #{inFee,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>